{"version":3,"sources":["actions/header.js","components/Header/index.js","containers/Header.js","actions/home.js","actions/searchBar.js","components/SearchBar/index.js","containers/SearchBar.js","components/Home/index.js","containers/Home.js","components/Country/index.js","reducers/home.js","containers/Country.js","components/App/index.js","containers/App.js","reducers/header.js","reducers/searchBar.js","reducers/index.js","middleware/homeMiddleware.js","store/index.js","index.js"],"names":["SELECT_DARKMODE","Header","handleDarkmodeClick","darkmode","body","document","querySelector","style","backgroundColor","color","className","type","onClick","connect","state","header","dispatch","FETCH_COUNTRIES","FETCH_COUNTRIES_SUCCESS","SELECT_COUNTRY","fetchCountriesSuccess","payload","SEARCH_COUNTRY","SEARCH_COUNTRY_SUCCESS","FILTER_COUNTRY","FILTER_COUNTRY_SUCCESS","SearchBar","inputChange","filterSelect","placeholder","onChange","evt","target","value","name","country","region","Home","countries","handleCountryClick","isLoad","search","map","to","alpha3Code","src","flag","alt","population","capital","home","isLoaded","Country","borderName","undefined","nativeName","subregion","topLevelDomain","currencies","languages","language","border","initialState","bo","getBorder","borders","forEach","push","find","n","action","e","App","fetchCountries","useEffect","exact","path","component","searchBar","combineReducers","homeMiddleware","store","next","axios","get","then","response","data","catch","error","console","log","enchancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","rootReducer","rootComponent","traget","getElementById","render"],"mappings":"6RAAaA,G,MAAkB,mB,eC2BhBC,EAxBA,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,oBAAqBC,EAAc,EAAdA,SAC9BC,EAAOC,SAASC,cAAc,QAUlC,OATGH,GACCC,EAAKG,MAAMC,gBAAkB,UAC7BJ,EAAKG,MAAME,MAAQ,SAGnBL,EAAKG,MAAMC,gBAAkB,YAC7BJ,EAAKG,MAAME,MAAQ,SAInB,yBAAQC,UAAWP,EAAW,OAAS,GAAvC,UACI,sDACA,yBAAQQ,KAAK,SAASD,UAAS,oBAAeP,EAAW,OAAS,SAAWS,QAAS,WAAOV,KAA7F,UACI,sBAAMQ,UAAU,iBAAhB,uBADJ,oBCHGG,eAVS,SAACC,GAAD,MAAY,CAChCX,SAAUW,EAAMC,OAAOZ,aAGA,SAACa,GAAD,MAAe,CACtCd,oBAAqB,WACjBc,EFR6B,CACjCL,KAAMX,QEWKa,CAA6CZ,GCd/CgB,EAAkB,kBAClBC,EAA0B,0BAC1BC,EAAiB,iBAMjBC,EAAwB,SAACC,GAAD,MAAc,CAC/CV,KAAMO,EACNG,YCVSC,G,MAAiB,kBACjBC,EAAyB,yBAEzBC,EAAiB,iBACjBC,EAAyB,yBCiCvBC,G,MAnCG,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,YAAaxB,EAA4B,EAA5BA,SAAUyB,EAAkB,EAAlBA,aAEvC,OACI,sBAAKlB,UAAU,aAAf,UACI,sBAAKA,UAAS,UAAKP,EAAW,cAAgB,UAA9C,UACI,sBAAMO,UAAU,6BAAhB,oBAGJ,sBAAMA,UAAU,cAAhB,SACI,uBAAOA,UAAU,eAAeC,KAAK,SAASkB,YAAY,wBAAwBC,SAAU,SAACC,GAASJ,EAAYI,EAAIC,OAAOC,eAGjI,qBAAKvB,UAAU,WAAf,SACI,yBAAQwB,KAAK,UAAUxB,UAAS,UAAKP,EAAW,uBAAyB,mBAAqB2B,SAAU,SAACC,GAASH,EAAaG,EAAIC,OAAOC,QAA1I,UACI,wBAAQA,MAAM,MAAd,+BACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,8BCJLpB,eAbS,SAACC,GAAD,MAAY,CAChCX,SAAUW,EAAMC,OAAOZ,aAGA,SAACa,GAAD,MAAe,CACtCW,YAAa,SAACQ,GACVnB,EFJmC,CACvCL,KAAMW,EACND,QEE2Bc,KAE3BP,aAAe,SAACQ,GACZpB,EFGmC,CACvCL,KAAMa,EACNH,QEL2Be,QAIhBvB,CAA6Ca,GC2C7CW,EArDF,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,UAAmBC,GAA2C,EAAnDC,OAAmD,EAA3CD,oBAAoBpC,EAAuB,EAAvBA,SAAUsC,EAAa,EAAbA,OACzDrC,EAAOC,SAASC,cAAc,QASlC,OARGH,GACCC,EAAKG,MAAMC,gBAAkB,UAC7BJ,EAAKG,MAAME,MAAQ,SAGnBL,EAAKG,MAAMC,gBAAkB,YAC7BJ,EAAKG,MAAME,MAAQ,SAGnB,iCACI,cAAC,EAAD,IACA,qBAAKC,UAAU,cAAf,SAEK+B,EAASA,EAAOC,KAAI,SAAAP,GAAO,OAExB,eAAC,IAAD,CAA+BQ,GAAE,qBAAgBR,EAAQS,YAAalC,UAAS,UAAKP,EAAW,YAAc,QAAUS,QAAS,WAAO2B,EAAmBJ,EAAQS,aAAlK,UACI,qBAAKlC,UAAU,WAAf,SACI,qBAAKmC,IAAKV,EAAQW,KAAOC,IAAI,WAEjC,sBAAKrC,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4ByB,EAAQD,OACpC,oBAAGxB,UAAU,YAAb,0BAAuCyB,EAAQa,cAC/C,oBAAGtC,UAAU,YAAb,sBAAmCyB,EAAQC,UAC3C,oBAAG1B,UAAU,YAAb,uBAAoCyB,EAAQc,gBARzCd,EAAQS,eAYnBN,EAAUI,KAAI,SAAAP,GAAO,OACrB,eAAC,IAAD,CAA+BQ,GAAE,qBAAgBR,EAAQS,YAAalC,UAAS,UAAKP,EAAW,YAAc,QAAUS,QAAS,WAAO2B,EAAmBJ,EAAQS,aAAlK,UACI,qBAAKlC,UAAU,WAAf,SACI,qBAAKmC,IAAKV,EAAQW,KAAOC,IAAI,WAEjC,sBAAKrC,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4ByB,EAAQD,OACpC,oBAAGxB,UAAU,YAAb,0BAAuCyB,EAAQa,cAC/C,oBAAGtC,UAAU,YAAb,sBAAmCyB,EAAQC,UAC3C,oBAAG1B,UAAU,YAAb,uBAAoCyB,EAAQc,gBARzCd,EAAQS,qBCpBxB/B,eAbS,SAACC,GAAD,MAAY,CAChCwB,UAAYxB,EAAMoC,KAAKZ,UACvBE,OAAS1B,EAAMoC,KAAKC,SACpBhD,SAAUW,EAAMC,OAAOZ,SACvBsC,OAAQ3B,EAAMoC,KAAKT,WAGI,SAACzB,GAAD,MAAe,CACtCuB,mBAAoB,SAACJ,GACjBnB,ELAmC,CACvCL,KAAMQ,EACNE,QKF2Bc,QAIhBtB,CAA6CwB,GC2C7Ce,G,MAzDC,SAAC,GAAuC,IAArCjB,EAAoC,EAApCA,QAAShC,EAA2B,EAA3BA,SAAUkD,EAAiB,EAAjBA,WAC9BjD,EAAOC,SAASC,cAAc,QAUlC,OATGH,GACCC,EAAKG,MAAMC,gBAAkB,UAC7BJ,EAAKG,MAAME,MAAQ,SAGnBL,EAAKG,MAAMC,gBAAkB,QAC7BJ,EAAKG,MAAME,MAAQ,SAInB,iCACI,eAAC,IAAD,CAAMkC,GAAG,cAAcjC,UAAS,UAAKP,EAAW,YAAc,QAA9D,UACI,sBAAMO,UAAU,iBAAhB,wBADJ,eAMgB4C,IAAfnB,EAAQ,GACT,sBAAKzB,UAAU,eAAf,UACI,qBAAKmC,IAAKV,EAAQ,GAAGW,KAAMpC,UAAU,mBAAmBqC,IAAKZ,EAAQ,GAAGD,OACxE,sBAAKxB,UAAU,oBAAf,UACI,6BAAKyB,EAAQ,GAAGD,OAChB,sBAAKxB,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,8BAAG,sBAAMA,UAAU,OAAhB,2BAAH,IAAgDyB,EAAQ,GAAGoB,cAC3D,8BAAG,sBAAM7C,UAAU,OAAhB,0BAAH,IAA+CyB,EAAQ,GAAGa,cAC1D,8BAAG,sBAAMtC,UAAU,OAAhB,sBAAH,IAA2CyB,EAAQ,GAAGC,UACtD,8BAAG,sBAAM1B,UAAU,OAAhB,0BAAH,IAA+CyB,EAAQ,GAAGqB,aAC1D,8BAAG,sBAAM9C,UAAU,OAAhB,uBAAH,IAA4CyB,EAAQ,GAAGc,cAE3D,sBAAKvC,UAAU,cAAf,UACI,8BAAG,sBAAMA,UAAU,OAAhB,gCAAH,IAAqDyB,EAAQ,GAAGsB,eAAe,MAC/E,8BAAG,sBAAM/C,UAAU,OAAhB,0BAAH,IAA+CyB,EAAQ,GAAGuB,WAAW,GAAGxB,QACxE,8BAAG,sBAAMxB,UAAU,OAAhB,yBAAH,IAA8CyB,EAAQ,GAAGwB,UAAUjB,KAAI,SAAAkB,GAAQ,OAC3EA,EAAS1B,KAAK,iBAK1B,sBAAKxB,UAAU,sBAAf,UACI,mBAAGA,UAAU,OAAb,gCACA,oBAAIA,UAAU,mBAAd,SACK2C,EAAWX,KAAI,SAAAmB,GAAM,OAElB,6BAAkBA,GAATA,iBAMrB,Q,eCpDdC,EAAe,CACjBxB,UAAW,GACXa,UAAU,EACVhB,QAAS,GACT4B,GAAI,IA8BKC,EAAY,SAAClD,GACtB,IAAIiD,EAAK,GACT,QAA6BT,IAA1BxC,EAAMoC,KAAKf,QAAQ,GAKlB,OAHArB,EAAMoC,KAAKf,QAAQ,GAAG8B,QAAQC,SAAQ,SAAAL,GAClCE,EAAGI,KAAKrD,EAAMoC,KAAKZ,UAAU8B,MAAK,SAAAlC,GAAI,OAAIA,EAAKU,aAAeiB,SAE3DE,EAAGrB,KAAI,SAAA2B,GAAC,OAAKA,EAAEnC,SAKfgB,EAvCF,WAAwC,IAAvCpC,EAAsC,uDAA9BgD,EAAcQ,EAAgB,uDAAP,GACzC,OAAOA,EAAO3D,MACV,KAAKO,EACD,OAAO,2BACAJ,GADP,IAEIwB,UAAU,YAAKgC,EAAOjD,SACtB8B,UAAWrC,EAAMqC,WAEzB,KAAKhC,EACD,OAAO,2BACAL,GADP,IAEIqB,QAAS,CAACrB,EAAMwB,UAAU8B,MAAK,SAAAG,GAAC,OAAIA,EAAE3B,aAAe0B,EAAOjD,cAEpE,KAAKE,EACD,OAAO,2BACAT,GADP,IAEI2B,OAAO,YAAK6B,EAAOjD,WAE3B,KAAKI,EACD,OAAO,2BACAX,GADP,IAEIwB,UAAWgC,EAAOjD,UAE1B,QACI,OAAOP,ICrBJD,eATS,SAACC,GAAD,MAAY,CAChCqB,QAASrB,EAAMoC,KAAKf,QACpBK,OAAS1B,EAAMoC,KAAKC,SACpBhD,SAAUW,EAAMC,OAAOZ,SACvBkD,WAAYW,EAAUlD,MAGC,GAEZD,CAA6CuC,GCY7CoB,EAlBH,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAMb,OAJAC,qBAAU,WACRD,MACC,CAACA,IAGF,gCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,cAAcC,UAAWxC,IAC3C,cAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,sBAAsBC,UAAWzB,WCL5CvC,cARS,MAEG,SAACG,GAAD,MAAe,CACtCyD,eAAgB,WACZzD,EVL6B,CACjCL,KAAMM,QUQKJ,CAA6C2D,G,QCXtDV,EAAe,CACjB3D,UAAU,GAgBCY,EAbA,WAAwC,IAAvCD,EAAsC,uDAA9BgD,EAAcQ,EAAgB,uDAAP,GAC3C,OAAOA,EAAO3D,MACV,KAAKX,EACD,OAAO,2BACAc,GADP,IAEIX,UAAWW,EAAMX,WAGzB,QACI,OAAOW,ICbbgD,EAAe,CACjB3B,QAAS,IAeE2C,EAZG,WAAwC,IAAvChE,EAAsC,uDAA9BgD,EAAcQ,EAAgB,uDAAP,GAC9C,OAAOA,EAAO3D,MACV,KAAKW,EACD,OAAO,2BACAR,GADP,IAEIqB,QAASmC,EAAOjD,UAExB,QACI,OAAOP,ICRJiE,cAAgB,CAC3B7B,OACAnC,SACA+D,c,iBCgCWE,EArCQ,SAACC,GAAD,OAAW,SAACC,GAAD,OAAU,SAACZ,GACzC,OAAOA,EAAO3D,MACV,KAAKM,EAEDkE,IAAMC,IAAI,wCACTC,MAAK,SAACC,GACHL,EAAMjE,SAASI,EAAsBkE,EAASC,UAEjDC,OAAM,SAACC,GACJC,QAAQC,IAAI,aAAcF,MAE9B,MACJ,KAAKnE,EACD6D,IAAMC,IAAI,yCAAyCd,EAAOjD,SACzDgE,MAAK,SAACC,GbPiB,IAACjE,EaQrB4D,EAAMjE,UbReK,EaQeiE,EAASC,KbRX,CAC9C5E,KAAMY,EACNF,gBaQQ,MACA,KAAKG,EACqB,QAAnB8C,EAAOjD,QACN8D,IAAMC,IAAI,wCACTC,MAAK,SAACC,GACHL,EAAMjE,SAASI,EAAsBkE,EAASC,UAIlDJ,IAAMC,IAAI,2CAA2Cd,EAAOjD,SAC3DgE,MAAK,SAACC,GbVS,IAACjE,EaWb4D,EAAMjE,UbXOK,EaWuBiE,EAASC,KbXnB,CAC9C5E,KAAMc,EACNJ,gBaYY,MACR,QACI,OAAO6D,EAAKZ,OC9BlBsB,GAFoBC,OAAOC,sCAAwCC,KAGrEC,YAEIhB,IASOC,EALDgB,YACVC,EACAN,GCNEO,EAEJ,cAAC,IAAD,CAAUlB,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAMAmB,EAAS/F,SAASgG,eAAe,QAEvCC,iBAAOH,EAAeC,K","file":"static/js/main.2395b540.chunk.js","sourcesContent":["export const SELECT_DARKMODE = 'SELECT_DARKMODE';\n\nexport const selectDarkmode = () => ({\n    type: SELECT_DARKMODE,\n})","import React from 'react';\nimport './styles.css';\n\nconst Header = ({handleDarkmodeClick, darkmode}) => {\n    let body = document.querySelector('body');\n    if(darkmode){\n        body.style.backgroundColor = \"#202d36\";\n        body.style.color = \"#000\";\n    }\n    else {\n        body.style.backgroundColor = \"lightgray\";\n        body.style.color = \"black\";       \n    }\n\n    return (\n        <header className={darkmode ? \"dark\" : \"\"}>\n            <h1>Where in the world ?</h1>\n            <button type=\"button\" className={`dark-mode ${darkmode ? \"dark\" : \"light\"}`} onClick={() => {handleDarkmodeClick()}}>\n                <span className=\"material-icons\">\n                    dark_mode\n                </span>\n                Darck Mode\n            </button>\n        </header>\n    );\n}\n\nexport default Header;","import { connect } from 'react-redux';\nimport { selectDarkmode } from '../actions/header';\nimport Header from '../components/Header';\n\nconst mapStateToProps = (state) => ({\n    darkmode: state.header.darkmode\n});\n\nconst mapDispatchToprops = (dispatch) => ({\n    handleDarkmodeClick: () => {\n        dispatch(selectDarkmode())\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Header);","export const FETCH_COUNTRIES = 'FETCH_COUNTRIES';\nexport const FETCH_COUNTRIES_SUCCESS = 'FETCH_COUNTRIES_SUCCESS';\nexport const SELECT_COUNTRY = 'SELECT_COUNTRY';\n\nexport const fetchCountries = () => ({\n    type: FETCH_COUNTRIES,\n});\n\nexport const fetchCountriesSuccess = (payload) => ({\n    type: FETCH_COUNTRIES_SUCCESS,\n    payload,\n});\n\nexport const selectCountry = (payload) => ({\n    type: SELECT_COUNTRY,\n    payload,\n})","export const SEARCH_COUNTRY = 'SEARCH_COUNTRY';\nexport const SEARCH_COUNTRY_SUCCESS = 'SEARCH_COUNTRY_SUCCESS';\n\nexport const FILTER_COUNTRY = 'FILTER_COUNTRY';\nexport const FILTER_COUNTRY_SUCCESS = 'FILTER_COUNTRY_SUCCESS';\n\nexport const searchCountry = (payload) => ({\n    type: SEARCH_COUNTRY,\n    payload\n});\n\nexport const searchCountrySuccess = (payload) => ({\n    type: SEARCH_COUNTRY_SUCCESS,\n    payload\n});\n\nexport const filterCountry = (payload) => ({\n    type: FILTER_COUNTRY,\n    payload\n})\n\nexport const filterCountrySuccess = (payload) => ({\n    type: FILTER_COUNTRY_SUCCESS,\n    payload\n})","import './styles.css';\n\nconst SearchBar = ({inputChange, darkmode, filterSelect}) => {\n\n    return (\n        <div className=\"search-bar\">\n            <div className={`${darkmode ? \"filter-dark\" : \"filter\"}`}>\n                <span className=\"material-icons filter-icon\">\n                    search\n                </span>\n            <form className=\"filter-form\">\n                <input className=\"filter-input\" type=\"search\" placeholder=\"Search for country...\" onChange={(evt) => {inputChange(evt.target.value)}} />\n            </form>\n            </div>\n            <div className=\"dropdown\">\n                <select name=\"regions\" className={`${darkmode ? \"dropdown-select-dark\" : \"dropdown-select\"}`} onChange={(evt) => {filterSelect(evt.target.value)}}>\n                    <option value=\"all\"> Filter by Region</option>\n                    <option value=\"Oceania\">Oceania</option>\n                    <option value=\"Europe\">Europe</option>\n                    <option value=\"Americas\">Americas</option>\n                    <option value=\"Asia\">Asia</option>\n                    <option value=\"Africa\">Africa</option>\n                </select>\n                {/* <button className={`${darkmode ? \"dropdown-button-dark\" : \"dropdown-button\"}`}  type=\"button\">\n                    Filter by Region\n                    <span className=\"material-icons\">\n                        expand_more\n                    </span>\n                </button>\n                <ul className=\"dropdown-menu\">\n                   \n                </ul> */}\n            </div>\n        </div>\n    );\n}\n\nexport default SearchBar;","import { connect } from 'react-redux';\nimport { searchCountry, filterCountry } from '../actions/searchBar';\nimport SearchBar from '../components/SearchBar';\n\nconst mapStateToProps = (state) => ({\n    darkmode: state.header.darkmode\n});\n\nconst mapDispatchToprops = (dispatch) => ({\n    inputChange: (country) => {\n        dispatch(searchCountry(country))\n    },\n    filterSelect:  (region) => {\n        dispatch(filterCountry(region))\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToprops)(SearchBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport './styles.css';\nimport SearchBar from '../../containers/SearchBar';\n\nconst Home = ({ countries, isLoad, handleCountryClick, darkmode, search }) => {\n    let body = document.querySelector('body');\n    if(darkmode){\n        body.style.backgroundColor = \"#202d36\";\n        body.style.color = \"#000\";\n    }\n    else {\n        body.style.backgroundColor = \"lightgray\";\n        body.style.color = \"black\";       \n    }\n    return (\n        <main>\n            <SearchBar />\n            <div className=\"class-group\">\n\n                {search ? search.map(country => (\n\n                    <Link key={country.alpha3Code} to={`/countries/${country.alpha3Code}`}className={`${darkmode ? \"card-dark\" : \"card\"}`} onClick={() => {handleCountryClick(country.alpha3Code)}}>\n                        <div className=\"card-img\">\n                            <img src={country.flag}  alt=\"flag\" />\n                        </div>\n                        <div className=\"card-body\">\n                            <h2 className=\"card-title\">{country.name}</h2>\n                            <p className=\"card-text\">Population : {country.population}</p>\n                            <p className=\"card-text\">Region : {country.region}</p>\n                            <p className=\"card-text\">Capital : {country.capital}</p>\n                        </div>\n                    </Link>\n\n                )): countries.map(country => (\n                    <Link key={country.alpha3Code} to={`/countries/${country.alpha3Code}`}className={`${darkmode ? \"card-dark\" : \"card\"}`} onClick={() => {handleCountryClick(country.alpha3Code)}}>\n                        <div className=\"card-img\">\n                            <img src={country.flag}  alt=\"flag\" />\n                        </div>\n                        <div className=\"card-body\">\n                            <h2 className=\"card-title\">{country.name}</h2>\n                            <p className=\"card-text\">Population : {country.population}</p>\n                            <p className=\"card-text\">Region : {country.region}</p>\n                            <p className=\"card-text\">Capital : {country.capital}</p>\n                        </div>\n                    </Link>\n                ))}\n\n            </div>\n        </main>\n    );\n}\n\nHome.propTypes = {\n    countries: PropTypes.array.isRequired,\n    isLoad: PropTypes.bool.isRequired,\n}\n\nexport default Home;","import { connect } from 'react-redux';\nimport { selectCountry } from '../actions/home';\nimport Home from '../components/Home';\n\nconst mapStateToProps = (state) => ({\n    countries : state.home.countries,\n    isLoad : state.home.isLoaded,\n    darkmode: state.header.darkmode,\n    search: state.home.search\n});\n\nconst mapDispatchToprops = (dispatch) => ({\n    handleCountryClick: (country) => {\n        dispatch(selectCountry(country))\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Home);","import { Link } from 'react-router-dom';\nimport './styles.css';\n\nconst Country = ({ country, darkmode, borderName }) => {\n    let body = document.querySelector('body');\n    if(darkmode){\n        body.style.backgroundColor = \"#202d36\";\n        body.style.color = \"#fff\";\n    }\n    else {\n        body.style.backgroundColor = \"white\";\n        body.style.color = \"black\";       \n    }\n\n    return (\n        <main>\n            <Link to='/countries/' className={`${darkmode ? \"back-dark\" : \"back\"}`}>\n                <span className=\"material-icons\">\n                    arrow_back\n            </span>\n            Back\n            </Link>\n            {country[0] !== undefined ?\n            <div className=\"card-country\">\n                <img src={country[0].flag} className=\"card-img-country\" alt={country[0].name} />\n                <div className=\"card-body-country\">\n                    <h2>{country[0].name}</h2>\n                    <div className=\"card-part\">\n                        <div className=\"card-part-1\">\n                            <p><span className=\"bold\">Native Name :</span> {country[0].nativeName}</p>\n                            <p><span className=\"bold\">Population :</span> {country[0].population}</p>\n                            <p><span className=\"bold\">Region :</span> {country[0].region}</p>\n                            <p><span className=\"bold\">Sub Region :</span> {country[0].subregion}</p>\n                            <p><span className=\"bold\">Capital :</span> {country[0].capital}</p>\n                        </div>\n                        <div className=\"card-part-2\">\n                            <p><span className=\"bold\">Top Level Domain :</span> {country[0].topLevelDomain[0]}</p>\n                            <p><span className=\"bold\">Currencies :</span> {country[0].currencies[0].name}</p>\n                            <p><span className=\"bold\">Languages :</span> {country[0].languages.map(language => (\n                                language.name+\", \"\n                            ))}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"card-bottom-country\">\n                        <p className=\"bold\">Border Countries :</p>\n                        <ul className=\"card-bottom-list\">\n                            {borderName.map(border => (\n\n                                <li key={border}>{border}</li>\n                            ))}\n                        </ul>\n                    </div>\n\n                </div>\n            </div> :\"\"}\n        </main>\n    );\n}\n\nexport default Country;","import {FETCH_COUNTRIES_SUCCESS, SELECT_COUNTRY} from '../actions/home';\nimport {SEARCH_COUNTRY_SUCCESS, FILTER_COUNTRY_SUCCESS} from '../actions/searchBar';\n\nconst initialState = {\n    countries: [],\n    isLoaded: false,\n    country: [],\n    bo: []\n};\n\nconst home = (state = initialState, action = {}) => {\n    switch(action.type) {\n        case FETCH_COUNTRIES_SUCCESS:\n            return {\n                ...state,\n                countries: [...action.payload],\n                isLoaded: !state.isLoaded,\n            };\n        case SELECT_COUNTRY: \n            return {\n                ...state,\n                country: [state.countries.find(e => e.alpha3Code === action.payload)]\n            };\n        case SEARCH_COUNTRY_SUCCESS:\n            return {\n                ...state,\n                search: [...action.payload],\n            };\n        case FILTER_COUNTRY_SUCCESS:\n            return {\n                ...state,\n                countries: action.payload,\n            };\n        default:\n            return state;\n    }\n};\nexport const getBorder = (state) => {\n    let bo = [];\n    if(state.home.country[0] !== undefined){\n\n        state.home.country[0].borders.forEach(border => {\n            bo.push(state.home.countries.find(name => name.alpha3Code === border))\n        })\n        return bo.map(n => (n.name))\n    }\n}\n\n        \nexport default home;","import { connect } from 'react-redux';\nimport Country from '../components/Country';\nimport { getBorder } from '../reducers/home';\n\nconst mapStateToProps = (state) => ({\n    country: state.home.country,\n    isLoad : state.home.isLoaded,\n    darkmode: state.header.darkmode,\n    borderName: getBorder(state)\n});\n\nconst mapDispatchToprops = {};\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Country);","import React, {useEffect} from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from '../../containers/Header';\nimport Home from '../../containers/Home';\nimport Country from '../../containers/Country';\n\nconst App = ({ fetchCountries }) => {\n\n  useEffect(() => {\n    fetchCountries()\n  }, [fetchCountries]);\n\n  return (\n    <div>\n      <Header/>\n      <Switch>\n        <Route exact path=\"/countries/\" component={Home} />\n        <Route exact path=\"/countries/:country\" component={Country} />\n      </Switch>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import {connect} from 'react-redux';\nimport App from '../components/App';\n\nimport {fetchCountries} from '../actions/home';\n\nconst mapStateToProps = null;\n\nconst mapDispatchToprops = (dispatch) => ({\n    fetchCountries: () => {\n        dispatch(fetchCountries());\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToprops)(App);","import {SELECT_DARKMODE} from '../actions/header';\n\nconst initialState = {\n    darkmode: false\n};\n\nconst header = (state = initialState, action = {}) => {\n    switch(action.type) {\n        case SELECT_DARKMODE:\n            return {\n                ...state,\n                darkmode: !state.darkmode,\n            };\n        \n        default:\n            return state;\n    }\n};\n\nexport default header;","import {SEARCH_COUNTRY} from '../actions/searchBar';\n\nconst initialState = {\n    country: \"\",\n};\n\nconst searchBar = (state = initialState, action = {}) => {\n    switch(action.type) {\n        case SEARCH_COUNTRY:\n            return {\n                ...state,\n                country: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default searchBar;","import {combineReducers} from 'redux';\n\nimport home from './home';\nimport header from './header';\nimport searchBar from './searchBar';\n\nexport default combineReducers({\n    home,\n    header,\n    searchBar,\n});","import axios from 'axios';\nimport {FETCH_COUNTRIES, fetchCountriesSuccess} from '../actions/home';\nimport {SEARCH_COUNTRY, searchCountrySuccess, FILTER_COUNTRY, filterCountrySuccess} from '../actions/searchBar';\n\nconst homeMiddleware = (store) => (next) => (action) => {\n    switch(action.type) {\n        case FETCH_COUNTRIES:\n            \n            axios.get(\"https://restcountries.eu/rest/v2/all\")\n            .then((response) => {\n                store.dispatch(fetchCountriesSuccess(response.data))\n            })\n            .catch((error) => {\n                console.log('erreur api', error)\n            });\n            break;\n        case SEARCH_COUNTRY:\n            axios.get(\"https://restcountries.eu/rest/v2/name/\"+action.payload)\n            .then((response) => {\n                store.dispatch(searchCountrySuccess(response.data))\n            });\n            break;\n            case FILTER_COUNTRY:\n                if(action.payload === \"all\") {\n                    axios.get(\"https://restcountries.eu/rest/v2/all\")\n                    .then((response) => {\n                        store.dispatch(fetchCountriesSuccess(response.data)) \n                    });                  \n                }\n                else {\n                    axios.get(\"https://restcountries.eu/rest/v2/region/\"+action.payload)\n                    .then((response) => {\n                        store.dispatch(filterCountrySuccess(response.data))\n                    });\n                }\n                break;\n        default:\n            return next(action);\n    }\n};\n\nexport default homeMiddleware;","import {createStore, compose, applyMiddleware} from 'redux';\n\nimport rootReducer from '../reducers';\nimport homeMiddleware from '../middleware/homeMiddleware';\n\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst enchancers = composeEnchancers(\n    applyMiddleware(\n        \n        homeMiddleware,\n    ),\n);\n\nconst store = createStore(\n    rootReducer,\n    enchancers,\n);\n\nexport default store;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './assets/styles/index.css'\n\nimport App from './containers/App';\n\nimport store from './store';\n\nconst rootComponent = (\n  \n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n \n);\n\nconst traget = document.getElementById('root');\n\nrender(rootComponent, traget);\n\n"],"sourceRoot":""}